{"version":3,"sources":["Schedule.tsx","stickyState.ts","App.tsx","index.tsx"],"names":["Schedule","props","defaultValue","key","React","useState","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useStickyState","id","showPopup","setShowPopup","className","title","date","fromNow","withTitle","local","description","onClick","htmlFor","type","onChange","event","target","rows","moment","format","toISOString","App","Date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74de0d3e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Generic.scss\";\r\nimport { useStickyState } from \"./stickyState\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n\r\nexport interface ScheduleData {\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    date: string\r\n}\r\n\r\nexport default function Schedule(props: ScheduleData) {\r\n    let [value, setValue] = useStickyState<ScheduleData>(props, props.id);\r\n    let [showPopup, setShowPopup] = useState(false);\r\n\r\n    let onTitleChange = (event: any) => {\r\n        setValue({\r\n            id: value.id,\r\n            title: event.target.value,\r\n            description: value.description,\r\n            date: value.date\r\n        })\r\n    }\r\n\r\n    let onDescriptionChange = (event: any) => {\r\n        setValue({\r\n            id: value.id,\r\n            title: value.title,\r\n            description: event.target.value,\r\n            date: value.date\r\n        })\r\n    }\r\n\r\n    let onDateChange = (event: any) => {\r\n        setValue({\r\n            id: value.id,\r\n            title: value.title,\r\n            description: value.description,\r\n            date: moment(event.target.value + \" \" + moment(value.date).format(\"HH:MM:SS\")).toISOString()\r\n        })\r\n    }\r\n\r\n    let onTimeChange = (event: any) => {\r\n        setValue({\r\n            id: value.id,\r\n            title: value.title,\r\n            description: value.description,\r\n            date: moment(moment(value.date).format(\"YYYY/MM/DD\") + \" \" + event.target.value).toISOString()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Schedule\">\r\n            <div className=\"Info\">\r\n                <div className=\"MainBar\">\r\n                    <div className=\"Title\">\r\n                        {value.title}\r\n                    </div>\r\n                    <div className=\"Countdown\">\r\n                        <Moment date={value.date} fromNow withTitle></Moment>\r\n                    </div>\r\n                </div>\r\n                <div className=\"InfoBar\">\r\n                    <div className=\"Date\">\r\n                        <Moment date={value.date} local></Moment>\r\n                    </div>\r\n\r\n                    <div className=\"Description\">\r\n                        {value.description}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Actions\">\r\n                <button onClick={() => setShowPopup(true)}>Edit</button>\r\n                <button>Delete</button>\r\n            </div>\r\n\r\n            {showPopup ?\r\n                <div className=\"EditSection\">\r\n                    <div className=\"Field\">\r\n                        <label htmlFor=\"title\" className=\"FieldTitle\">Title</label>\r\n                        <input type=\"text\" className=\"FieldInput\" defaultValue={value.title} onChange={onTitleChange}/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label htmlFor=\"description\" className=\"FieldTitle\">Description</label>\r\n                        <textarea rows={10} className=\"FieldInput\" defaultValue={value.description} onChange={onDescriptionChange}/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label htmlFor=\"date\" className=\"FieldTitle\">Date and time</label>\r\n                        <input type=\"date\" className=\"FieldInput\" defaultValue={moment(value.date).format(\"YYYY-MM-DD\")} onChange={onDateChange}/>\r\n                        <input type=\"time\" className=\"FieldInput\" defaultValue={moment(value.date).format(\"HH:MM:SS\")} onChange={onTimeChange}/>\r\n                    </div>\r\n                </div>\r\n            : null}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\n/**\r\n * \r\n * @param defaultValue Default value to store\r\n * @param key The local storage key\r\n * @returns value and setValue as per React.useState\r\n */\r\nexport function useStickyState<T>(defaultValue: T, key: string): [T, React.Dispatch<T>] {\r\n    const [value, setValue] = React.useState(() => {\r\n      const stickyValue = window.localStorage.getItem(key);\r\n      return stickyValue !== null\r\n        ? JSON.parse(stickyValue)\r\n        : defaultValue;\r\n    });\r\n    \r\n    React.useEffect(() => {\r\n      window.localStorage.setItem(key, JSON.stringify(value));\r\n    }, [key, value]);\r\n    \r\n    return [value, setValue];\r\n  }","import React from 'react';\nimport Schedule from './Schedule';\nimport \"./Generic.scss\";\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <div className=\"Header\">\n          <div className=\"Main\">\n            Scheduler\n          </div>\n          <div className=\"Description\">\n            Define a list of times to look forward to!\n          </div>\n        </div>\n      </header>\n      <div>\n        <Schedule id=\"a\" title=\"aa\" description=\"aaaaaaaa\" date={new Date().toISOString()}></Schedule>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
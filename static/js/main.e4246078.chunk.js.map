{"version":3,"sources":["stickyState.ts","Schedule.tsx","Schedules.tsx","App.tsx","index.tsx"],"names":["useStickyState","defaultValue","key","React","useState","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Schedule","props","id","showPopup","setShowPopup","className","onClick","title","date","fromNow","withTitle","local","description","htmlFor","type","onChange","event","target","rows","moment","format","console","log","toISOString","onDelete","Schedules","orderBy","ids","filter","i","removeItem","items","map","item","data","newID","uuidv4","Date","now","concat","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAQO,SAASA,EAAkBC,EAAiBC,GAAsC,IAAD,EAC1DC,IAAMC,UAAS,WACvC,IAAMC,EAAcC,OAAOC,aAAaC,QAAQN,GAChD,OAAuB,OAAhBG,EACHI,KAAKC,MAAML,GACXJ,KAL8E,mBAC7EU,EAD6E,KACtEC,EADsE,KAYpF,OAJAT,IAAMU,WAAU,WACdP,OAAOC,aAAaO,QAAQZ,EAAKO,KAAKM,UAAUJ,MAC/C,CAACT,EAAKS,IAEF,CAACA,EAAOC,G,2CCHJ,SAASI,EAASC,GAAuB,IAAD,EAC3BjB,EAA6BiB,EAAOA,EAAMC,IADf,mBAC9CP,EAD8C,KACvCC,EADuC,OAEnBR,oBAAS,GAFU,mBAE9Ce,EAF8C,KAEnCC,EAFmC,KAoCnD,OACI,sBAAKC,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAOC,QAAS,WAAOF,GAAcD,IAApD,UACI,sBAAKE,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,SACKV,EAAMY,QAEX,qBAAKF,UAAU,YAAf,SACI,cAAC,IAAD,CAAQG,KAAMb,EAAMa,KAAMC,SAAO,EAACC,WAAS,SAGnD,sBAAKL,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAQG,KAAMb,EAAMa,KAAMG,OAAK,MAGnC,qBAAKN,UAAU,cAAf,SACKV,EAAMiB,oBAKlBT,EACG,sBAAKE,UAAU,cAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAOQ,QAAQ,QAAQR,UAAU,aAAjC,mBACA,uBAAOS,KAAK,OAAOT,UAAU,aAAapB,aAAcU,EAAMY,MAAOQ,SA1DrE,SAACC,GACjBpB,EAAS,2BACFD,GADC,IAEJY,MAAOS,EAAMC,OAAOtB,eAyDZ,sBAAKU,UAAU,QAAf,UACI,uBAAOQ,QAAQ,cAAcR,UAAU,aAAvC,yBACA,0BAAUa,KAAM,GAAIb,UAAU,aAAapB,aAAcU,EAAMiB,YAAaG,SAvDtE,SAACC,GACvBpB,EAAS,2BACFD,GADC,IAEJiB,YAAaI,EAAMC,OAAOtB,eAsDlB,sBAAKU,UAAU,QAAf,UACI,uBAAOQ,QAAQ,OAAOR,UAAU,aAAhC,2BACA,uBAAOS,KAAK,OAAOT,UAAU,aAAapB,aAAckC,IAAOxB,EAAMa,MAAMY,OAAO,cAAeL,SApDlG,SAACC,GAChBK,QAAQC,IAAI3B,EAAMa,KAAMQ,EAAMC,OAAOtB,OAChCqB,EAAMC,OAAOtB,OAClBC,EAAS,2BACFD,GADC,IAEJa,KAAMW,IAAOH,EAAMC,OAAOtB,MAAQ,IAAMwB,IAAOxB,EAAMa,MAAMY,OAAO,aAAaG,oBAgDnE,uBAAOT,KAAK,OAAOT,UAAU,aAAapB,aAAckC,IAAOxB,EAAMa,MAAMY,OAAO,YAAaL,SA5ChG,SAACC,GAChBK,QAAQC,IAAI3B,EAAMa,KAAMQ,EAAMC,OAAOtB,OAChCqB,EAAMC,OAAOtB,OAClBC,EAAS,2BACFD,GADC,IAEJa,KAAMW,IAAOA,IAAOxB,EAAMa,MAAMY,OAAO,cAAgB,IAAMJ,EAAMC,OAAOtB,OAAO4B,uBAyCzE,sBAAKlB,UAAU,QAAf,UACI,uBAAOA,UAAU,aAAjB,yBACA,wBAAQA,UAAU,6BAA6BC,QAAS,WAAWL,EAAMuB,UAAUvB,EAAMuB,SAAS7B,EAAMO,KAAxG,0BAGV,Q,YCnFC,SAASuB,IAAa,IAAD,EACRzC,EAA0B,CAAE0C,QAAS,UAAWC,IAAK,CAAC,MAAQ,SADtD,mBAC3BhC,EAD2B,KACpBC,EADoB,KAS5B4B,EAAW,SAACtB,GACZN,EAAS,CACL8B,QAAS/B,EAAM+B,QACfC,IAAKhC,EAAMgC,IAAIC,QAAO,SAAAC,GAAC,OAAIA,IAAM3B,OAGrCX,aAAauC,WAAW5B,IAkBtB6B,EAAQpC,EAAMgC,IAAIK,KAAI,SAACC,GACzB,IAAMC,EAAOzC,KAAKC,MAAMH,aAAaC,QAAQyC,IAC7C,OAAO,wBAACjC,EAAD,2BAAckC,GAAd,IAAoBV,SAAUA,EAAUtC,IAAKgD,EAAKhC,SAK7D,OAFAmB,QAAQC,IAAIS,GAGR,gCACI,8BAAMA,IACN,qBAAK1B,UAAU,YAAYC,QAzBjB,WACd,IAAI6B,EAAQC,cACZ7C,aAAaO,QAAQqC,EAAO1C,KAAKM,UAAU,CACvCG,GAAIiC,EACJ5B,MAAO,eACPK,YAAa,uCACbJ,KAAMW,IAAOkB,KAAKC,OAAOf,iBAG7B3B,EAAS,CACL8B,QAAS/B,EAAM+B,QACfC,IAAKhC,EAAMgC,IAAIY,OAAO,CAACJ,OAcvB,kBC/BGK,MApBf,WACE,OACE,gCACE,iCACE,sBAAKnC,UAAU,SAAf,UACE,qBAAKA,UAAU,OAAf,uBAGA,qBAAKA,UAAU,cAAf,6DAKJ,8BACE,cAACoB,EAAD,UCbRgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e4246078.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n/**\r\n * \r\n * @param defaultValue Default value to store\r\n * @param key The local storage key\r\n * @returns value and setValue as per React.useState\r\n */\r\nexport function useStickyState<T>(defaultValue: T, key: string): [T, React.Dispatch<T>] {\r\n    const [value, setValue] = React.useState(() => {\r\n      const stickyValue = window.localStorage.getItem(key);\r\n      return stickyValue !== null\r\n        ? JSON.parse(stickyValue)\r\n        : defaultValue;\r\n    });\r\n    \r\n    React.useEffect(() => {\r\n      window.localStorage.setItem(key, JSON.stringify(value));\r\n    }, [key, value]);\r\n    \r\n    return [value, setValue];\r\n  }","import React, { useState } from \"react\";\r\nimport \"./Generic.scss\";\r\nimport { useStickyState } from \"./stickyState\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n\r\nexport interface ScheduleData {\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    date: string\r\n}\r\n\r\nexport interface ScheduleProps extends ScheduleData {\r\n    onDelete?: (id: string) => void\r\n}\r\n\r\nexport default function Schedule(props: ScheduleProps) {\r\n    let [value, setValue] = useStickyState<ScheduleData>(props, props.id);\r\n    let [showPopup, setShowPopup] = useState(false);\r\n\r\n    let onTitleChange = (event: any) => {\r\n        setValue({\r\n            ...value,\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    let onDescriptionChange = (event: any) => {\r\n        setValue({\r\n            ...value,\r\n            description: event.target.value,\r\n        })\r\n    }\r\n\r\n    let onDateChange = (event: any) => {\r\n        console.log(value.date, event.target.value);\r\n        if (!event.target.value) return;\r\n        setValue({\r\n            ...value,\r\n            date: moment(event.target.value + \" \" + moment(value.date).format(\"HH:MM:SS\")).toISOString()\r\n        })\r\n    }\r\n\r\n    let onTimeChange = (event: any) => {\r\n        console.log(value.date, event.target.value);\r\n        if (!event.target.value) return;\r\n        setValue({\r\n            ...value,\r\n            date: moment(moment(value.date).format(\"YYYY/MM/DD\") + \" \" + event.target.value).toISOString()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Schedule\">\r\n            <div className=\"Info\" onClick={() => {setShowPopup(!showPopup)}}>\r\n                <div className=\"MainBar\">\r\n                    <div className=\"Title\">\r\n                        {value.title}\r\n                    </div>\r\n                    <div className=\"Countdown\">\r\n                        <Moment date={value.date} fromNow withTitle></Moment>\r\n                    </div>\r\n                </div>\r\n                <div className=\"InfoBar\">\r\n                    <div className=\"Date\">\r\n                        <Moment date={value.date} local></Moment>\r\n                    </div>\r\n\r\n                    <div className=\"Description\">\r\n                        {value.description}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {showPopup ?\r\n                <div className=\"EditSection\">\r\n                    <div className=\"Field\">\r\n                        <label htmlFor=\"title\" className=\"FieldTitle\">Title</label>\r\n                        <input type=\"text\" className=\"FieldInput\" defaultValue={value.title} onChange={onTitleChange}/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label htmlFor=\"description\" className=\"FieldTitle\">Description</label>\r\n                        <textarea rows={10} className=\"FieldInput\" defaultValue={value.description} onChange={onDescriptionChange}/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label htmlFor=\"date\" className=\"FieldTitle\">Date and time</label>\r\n                        <input type=\"date\" className=\"FieldInput\" defaultValue={moment(value.date).format(\"YYYY-MM-DD\")} onChange={onDateChange}/>\r\n                        <input type=\"time\" className=\"FieldInput\" defaultValue={moment(value.date).format(\"HH:MM:SS\")} onChange={onTimeChange}/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label className=\"FieldTitle\">Danger zone</label>\r\n                        <button className=\"FieldInput FieldInput--red\" onClick={() => {if (props.onDelete) props.onDelete(value.id)}}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            : null}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Schedule from \"./Schedule\";\r\nimport { useStickyState } from \"./stickyState\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./Generic.scss\";\r\nimport moment from \"moment\";\r\n\r\ninterface IndexData {\r\n    orderBy: \"endDate\" | \"id\" | \"title\",\r\n    ids: string[]\r\n}\r\n\r\nexport default function Schedules() {\r\n    let [value, setValue] = useStickyState<IndexData>({ orderBy: \"endDate\", ids: [\"a\"] }, \"index\");\r\n\r\n    // Check valid IDs\r\n    // setValue({\r\n    //     orderBy: value.orderBy,\r\n    //     ids: value.ids.filter(i => localStorage.getItem(i) !== null)\r\n    // });\r\n\r\n    let onDelete = (id: string) => {\r\n        setValue({\r\n            orderBy: value.orderBy,\r\n            ids: value.ids.filter(i => i !== id)\r\n        });\r\n\r\n        localStorage.removeItem(id);\r\n    };\r\n\r\n    let handleClick = () => {\r\n        let newID = uuidv4();\r\n        localStorage.setItem(newID, JSON.stringify({\r\n            id: newID,\r\n            title: \"My new event\",\r\n            description: \"Put something here, or keep it empty\",\r\n            date: moment(Date.now()).toISOString()\r\n        }))\r\n        \r\n        setValue({\r\n            orderBy: value.orderBy,\r\n            ids: value.ids.concat([newID])\r\n        });\r\n    }\r\n\r\n    const items = value.ids.map((item) => {\r\n        const data = JSON.parse(localStorage.getItem(item)!);\r\n        return <Schedule {...data} onDelete={onDelete} key={data.id}/>\r\n    });\r\n\r\n    console.log(items);\r\n\r\n    return (\r\n        <div>\r\n            <div>{items}</div>\r\n            <div className=\"AddButton\" onClick={handleClick}>+</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport \"./Generic.scss\";\nimport Schedules from './Schedules';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <div className=\"Header\">\n          <div className=\"Main\">\n            Scheduler\n          </div>\n          <div className=\"Description\">\n            Define a list of times to look forward to!\n          </div>\n        </div>\n      </header>\n      <div>\n        <Schedules></Schedules>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
{"version":3,"sources":["Schedule.tsx","stickyState.ts","App.tsx","index.tsx"],"names":["Schedule","props","defaultValue","key","React","useState","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useStickyState","id","className","title","date","fromNow","App","description","Date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAYe,SAASA,EAASC,GAAsB,IAAD,ECJ/C,SAA2BC,EAAiBC,GAAsC,IAAD,EAC1DC,IAAMC,UAAS,WACvC,IAAMC,EAAcC,OAAOC,aAAaC,QAAQN,GAChD,OAAuB,OAAhBG,EACHI,KAAKC,MAAML,GACXJ,KAL8E,mBAC7EU,EAD6E,KACtEC,EADsE,KAYpF,OAJAT,IAAMU,WAAU,WACdP,OAAOC,aAAaO,QAAQZ,EAAKO,KAAKM,UAAUJ,MAC/C,CAACT,EAAKS,IAEF,CAACA,EAAOC,GDPSI,CAA6BhB,EAAOA,EAAMiB,IADhB,mBAC7CN,EAD6C,UAElD,OACI,qBAAKO,UAAU,WAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,SACKP,EAAMQ,QAEX,qBAAKD,UAAU,YAAf,SACI,cAAC,IAAD,CAAQE,KAAMT,EAAMS,KAAMC,SAAO,WERtCC,MAVf,WACE,OACE,8BACE,iCACE,cAAC,EAAD,CAAUL,GAAG,IAAIE,MAAM,KAAKI,YAAY,WAAWH,KAAM,IAAII,YCFrEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1cfab041.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Schedule.scss\";\r\nimport { useStickyState } from \"./stickyState\";\r\nimport Moment from \"react-moment\";\r\n\r\ninterface ScheduleData {\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    date: Date\r\n}\r\n\r\nexport default function Schedule(props: ScheduleData) {\r\n    let [value, setValue] = useStickyState<ScheduleData>(props, props.id);\r\n    return (\r\n        <div className=\"Schedule\">\r\n            <div className=\"MainBar\">\r\n                <div className=\"Title\">\r\n                    {value.title}\r\n                </div>\r\n                <div className=\"Countdown\">\r\n                    <Moment date={value.date} fromNow></Moment>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\n/**\r\n * \r\n * @param defaultValue Default value to store\r\n * @param key The local storage key\r\n * @returns value and setValue as per React.useState\r\n */\r\nexport function useStickyState<T>(defaultValue: T, key: string): [T, React.Dispatch<T>] {\r\n    const [value, setValue] = React.useState(() => {\r\n      const stickyValue = window.localStorage.getItem(key);\r\n      return stickyValue !== null\r\n        ? JSON.parse(stickyValue)\r\n        : defaultValue;\r\n    });\r\n    \r\n    React.useEffect(() => {\r\n      window.localStorage.setItem(key, JSON.stringify(value));\r\n    }, [key, value]);\r\n    \r\n    return [value, setValue];\r\n  }","import React from 'react';\nimport Schedule from './Schedule';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <Schedule id=\"a\" title=\"aa\" description=\"aaaaaaaa\" date={new Date()}></Schedule>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}